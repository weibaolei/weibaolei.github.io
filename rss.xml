<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>スポンジ・ボブです</title>
        <link>http://example.com</link>
        <description></description>
        <language>zh-CN</language>
        <pubDate>Sun, 24 Dec 2023 16:35:05 +0800</pubDate>
        <lastBuildDate>Sun, 24 Dec 2023 16:35:05 +0800</lastBuildDate>
        <category>JAVA</category>
        <category>HmacSHA</category>
        <category>VUE</category>
        <category>VMware</category>
        <category>Linux</category>
        <category>Element</category>
        <category>Bug</category>
        <category>网络</category>
        <item>
            <guid isPermalink="true">http://example.com/2023/12/24/hello-world/</guid>
            <title>Hello World</title>
            <link>http://example.com/2023/12/24/hello-world/</link>
            <pubDate>Sun, 24 Dec 2023 16:35:05 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;Welcome to &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvLw==&#34;&gt;Hexo&lt;/span&gt;! This is your very first post. Check &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv&#34;&gt;documentation&lt;/span&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=&#34;&gt;troubleshooting&lt;/span&gt; or you can ask me on &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcw==&#34;&gt;GitHub&lt;/span&gt;.&lt;/p&gt;
&lt;h2 id=&#34;quick-start&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#quick-start&#34;&gt;#&lt;/a&gt; Quick Start&lt;/h2&gt;
&lt;h3 id=&#34;create-a-new-post&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#create-a-new-post&#34;&gt;#&lt;/a&gt; Create a new post&lt;/h3&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ hexo new &lt;span class=&#34;string&#34;&gt;&amp;quot;My New Post&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s&#34;&gt;Writing&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;run-server&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#run-server&#34;&gt;#&lt;/a&gt; Run server&lt;/h3&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ hexo server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=&#34;&gt;Server&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;generate-static-files&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#generate-static-files&#34;&gt;#&lt;/a&gt; Generate static files&lt;/h3&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ hexo generate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s&#34;&gt;Generating&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;deploy-to-remote-sites&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#deploy-to-remote-sites&#34;&gt;#&lt;/a&gt; Deploy to remote sites&lt;/h3&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ hexo deploy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvb25lLWNvbW1hbmQtZGVwbG95bWVudC5odG1s&#34;&gt;Deployment&lt;/span&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2022/02/10/JAVA%E7%9A%84%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6/</guid>
            <title>JAVA的反射机制</title>
            <link>http://example.com/2022/02/10/JAVA%E7%9A%84%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6/</link>
            <category>JAVA</category>
            <pubDate>Thu, 10 Feb 2022 19:15:28 +0800</pubDate>
            <description><![CDATA[ &lt;h3 id=&#34;什么是java的反射机制&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#什么是java的反射机制&#34;&gt;#&lt;/a&gt; 什么是 JAVA 的反射机制&lt;/h3&gt;
&lt;p&gt;JAVA 反射就是在运行状态中，对于任意一个类都可以知道这个类的所有属性和方法；对于任何一个对象都能调用它的属性和方法，这种动态的调用对象的方法、获取类的信息的功能称为 JAVA 语言的反射机制。&lt;/p&gt;
&lt;h3 id=&#34;实现反射机制的三种方法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#实现反射机制的三种方法&#34;&gt;#&lt;/a&gt; 实现反射机制的三种方法&lt;/h3&gt;
&lt;p&gt;定义一个类 Student&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; * @Classname Student&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; * @Description 学生类&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; * @Date 2022/2/8 19:08&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; * @Author wbl&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;public class Student &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    public String name;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    public String sex;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    public Integer age;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    public void study()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        System.out.println(&amp;quot;学生要学习&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol&gt;
&lt;li&gt;通过创建对象&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;private void getClass1()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Student student = new Student();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Class&amp;lt;? extends Student&amp;gt; studentClass = student.getClass();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    System.out.println(&amp;quot;*******方法1*******&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    System.out.println(studentClass);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    System.out.println(Arrays.toString(studentClass.getFields()));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;通过相对路径&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;private void getClass2()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    try &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Class&amp;lt;?&amp;gt; studentClass = Class.forName(&amp;quot;com.study.reflex.Student&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        System.out.println(&amp;quot;*******方法2*******&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        System.out.println(studentClass);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        System.out.println(Arrays.toString(studentClass.getFields()));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125; catch (ClassNotFoundException e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        e.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;通过类名&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;private void getClass3()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Class&amp;lt;Student&amp;gt; studentClass = Student.class;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    System.out.println(&amp;quot;*******方法3*******&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    System.out.println(studentClass);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    System.out.println(Arrays.toString(studentClass.getFields()));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;应用场景&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#应用场景&#34;&gt;#&lt;/a&gt; 应用场景&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;加载数据库驱动&lt;/li&gt;
&lt;li&gt;获取对象的属性方法类及其构造方法&lt;/li&gt;
&lt;li&gt;instanceof 关键字&lt;/li&gt;
&lt;li&gt;编译器如 IDEA 的。之后的弹出&lt;/li&gt;
&lt;li&gt;Spring 框架的一些 xmd 装配&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;反射的优缺点&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#反射的优缺点&#34;&gt;#&lt;/a&gt; 反射的优缺点&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;代码灵活性&lt;/li&gt;
&lt;li&gt;性能差一点&lt;/li&gt;
&lt;/ol&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2022/02/08/%E5%BC%82%E6%AD%A5%E8%AF%B7%E6%B1%82CloseableHttpAsyncClient%E7%9A%84%E4%BD%BF%E7%94%A8/</guid>
            <title>异步请求CloseableHttpAsyncClient的使用</title>
            <link>http://example.com/2022/02/08/%E5%BC%82%E6%AD%A5%E8%AF%B7%E6%B1%82CloseableHttpAsyncClient%E7%9A%84%E4%BD%BF%E7%94%A8/</link>
            <category>网络</category>
            <pubDate>Tue, 08 Feb 2022 18:33:09 +0800</pubDate>
            <description><![CDATA[ &lt;h3 id=&#34;前言&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#前言&#34;&gt;#&lt;/a&gt; 前言&lt;/h3&gt;
&lt;p&gt;最近项目有个小需求，需要发送短信验证码，而我们用的短信发送平台是由其他机构提供的，我们只能通过请求前置机并由前置机进行 nginx 转发来调用实际短信平台的 WebService 服务。&lt;br&gt;
由于验证码不会影响业务逻辑，因此我这里开始采用的时异步 http 请求，也就是使用的 httpclient 在 4.0 后提供新的 api CloseableHttpAsyncClient。&lt;/p&gt;
&lt;h3 id=&#34;关于网络调用类型&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#关于网络调用类型&#34;&gt;#&lt;/a&gt; 关于网络调用类型&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;传统 BIO&lt;br&gt;
 同步阻塞式 IO，一个连接一个线程，客户端有连接请求时服务器端就需要启动一个线程进行处理&lt;/li&gt;
&lt;li&gt;NIO(NOT-Blocking IO)&lt;br&gt;
 同步非阻塞式 IO，一个请求一个线程&lt;/li&gt;
&lt;li&gt;AIO&lt;br&gt;
 异步非阻塞式 IO，服务器实现模式为一个有效请求一个线程&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;closeablehttpasyncclient的使用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#closeablehttpasyncclient的使用&#34;&gt;#&lt;/a&gt; CloseableHttpAsyncClient 的使用&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;CloseableHttpAsyncClient 是 apache 在 4.0 后提供 AIO 操作的 api&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;pom 引入 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &amp;lt;groupId&amp;gt;org.apache.httpcomponents&amp;lt;/groupId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &amp;lt;artifactId&amp;gt;httpclient&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &amp;lt;version&amp;gt;4.5.2&amp;lt;/version&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &amp;lt;groupId&amp;gt;org.apache.httpcomponents&amp;lt;/groupId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &amp;lt;artifactId&amp;gt;httpcore&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &amp;lt;version&amp;gt;4.4.5&amp;lt;/version&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &amp;lt;groupId&amp;gt;org.apache.httpcomponents&amp;lt;/groupId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &amp;lt;artifactId&amp;gt;httpcore-nio&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &amp;lt;version&amp;gt;4.4.5&amp;lt;/version&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &amp;lt;groupId&amp;gt;org.apache.httpcomponents&amp;lt;/groupId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &amp;lt;artifactId&amp;gt;httpasyncclient&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &amp;lt;version&amp;gt;4.1.2&amp;lt;/version&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;定义 AsynHttpClient 类&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;package com.dhc.leapower.business.rygl.utils;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import org.apache.http.client.config.RequestConfig;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import org.apache.http.client.methods.HttpPost;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import org.apache.http.entity.ContentType;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import org.apache.http.entity.StringEntity;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import org.apache.http.impl.nio.client.CloseableHttpAsyncClient;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import org.apache.http.impl.nio.client.HttpAsyncClients;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import org.apache.http.impl.nio.reactor.IOReactorConfig;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import org.apache.http.nio.reactor.ConnectingIOReactor;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import org.apache.http.nio.reactor.IOReactorException;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; * @author baolei.wei&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; * @title: AsynHttpClient&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; * @projectName leapower-business-rygl&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; * @description:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; * @date 2022/1/24 12:55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;public class AsynHttpClient &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    private static CloseableHttpAsyncClient client = null;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    public static CloseableHttpAsyncClient getHttpClient() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if (client == null) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            synchronized (AsynHttpClient.class) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                if (client == null) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    RequestConfig requestConfig = RequestConfig.custom()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            //连接超时,连接建立时间,三次握手完成时间&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            .setConnectTimeout(2000)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            //请求超时,数据传输过程中数据包之间间隔的最大时间&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            .setSocketTimeout(2000)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            //使用连接池来管理连接,从连接池获取连接的超时时间&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            .setConnectionRequestTimeout(20000)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            .build();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    //配置io线程&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    IOReactorConfig ioReactorConfig = IOReactorConfig.custom().&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            setIoThreadCount(Runtime.getRuntime().availableProcessors())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            .setSoKeepAlive(true)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            .build();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    //设置连接池大小&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    ConnectingIOReactor ioReactor = null;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    try &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        ioReactor = new DefaultConnectingIOReactor(ioReactorConfig);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &amp;#125; catch (IOReactorException e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        e.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    PoolingNHttpClientConnectionManager connManager = new PoolingNHttpClientConnectionManager(ioReactor);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    //最大连接数设置1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    connManager.setMaxTotal(5);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    //per route最大连接数设置&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    connManager.setDefaultMaxPerRoute(5);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    client = HttpAsyncClients.custom()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            .setConnectionManager(connManager)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            .setDefaultRequestConfig(requestConfig)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            .build();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    client.start();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return client;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    public static HttpPost getPostBody(String urls, String bodys, ContentType contentType) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        HttpPost post = null;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        StringEntity entity = null;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        post = new HttpPost(urls);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        entity = new StringEntity(bodys, contentType);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        post.setEntity(entity);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return post;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;实际应用&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; * 生成验证码&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;@ApiOperation(value = &amp;quot;新建&amp;quot;, notes = &amp;quot;&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;@RequestMapping(value = &amp;quot;/create&amp;quot;, method = RequestMethod.POST, produces = MediaType.APPLICATION_JSON_VALUE)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;public RestDTO&amp;lt;Void&amp;gt; create(@RequestBody JSONObject tel) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    String code = this.identifyingCode(6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    //像手机发送验证码&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    CloseableHttpAsyncClient httpClient = AsynHttpClient.getHttpClient();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    //短信平台前置机的ip与WebService 服务方法&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    String url = &amp;quot;http://127.0.0.1:60001/login&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    JSONObject parameter = new JSONObject();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    parameter.put(&amp;quot;accountName&amp;quot;,&amp;quot;admin&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    parameter.put(&amp;quot;password&amp;quot;,&amp;quot;123456&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    String stringBody = JSONObject.toJSONString(parameter);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    HttpPost httpPost = new HttpPost(url);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    StringEntity entity = new StringEntity(stringBody, ContentType.APPLICATION_JSON);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    httpPost.setEntity(entity);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    FutureCallback&amp;lt;HttpResponse&amp;gt; callback = new FutureCallback&amp;lt;HttpResponse&amp;gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        public void completed(HttpResponse result) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            HttpEntity entity = result.getEntity();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            InputStream stream = null;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            try &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                stream = entity.getContent();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125; catch (IOException e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                e.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            String string = changeInputStream(stream, &amp;quot;utf-8&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            System.out.println(&amp;quot;-----------&amp;quot; + string + &amp;quot;-----------&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        public void failed(Exception e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            e.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            System.err.println(&amp;quot;失败：&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        public void cancelled() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            System.err.println(&amp;quot;cancelled&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    httpClient.execute(httpPost,callback);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    verificationCodeCacheService.add(tel.get(&amp;quot;tel&amp;quot;).toString(),code);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return RestDTO.success();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2022/01/22/el-cascader-%E7%BA%A7%E8%81%94%E9%80%89%E6%8B%A9%E5%99%A8%E8%8E%B7%E5%8F%96value%E4%B8%8Elabel/</guid>
            <title>el-cascader 级联选择器获取value与label</title>
            <link>http://example.com/2022/01/22/el-cascader-%E7%BA%A7%E8%81%94%E9%80%89%E6%8B%A9%E5%99%A8%E8%8E%B7%E5%8F%96value%E4%B8%8Elabel/</link>
            <category>VUE</category>
            <pubDate>Sat, 22 Jan 2022 09:40:19 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;在使用 element-ui 的 el-cascader 级联选择器时，我想在 @change 函数中获取当前选中的 value 与 label 值，但是使用的原有参数只能获取 value 值。&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;el-form-item&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;label&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;省市地区：&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;el-cascader&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;ref&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;cityCascader&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;style&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;width:100%&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;v-model&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;comeAddress&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;:props&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;optionProps&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;:options&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;cityOptions&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;filterable&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;clearable&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;    @&lt;span class=&#34;attr&#34;&gt;change&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;handleCityChange&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;  &amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;el-cascader&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;el-form-item&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可以使用 &lt;mark&gt;that.$refs[“cityCascader”].getCheckedNodes()[0].pathLabels&lt;/mark&gt; 函数来获取当前的 label 值。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;handleCityChange&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;value&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; that = &lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; labels = that.&lt;span class=&#34;property&#34;&gt;$refs&lt;/span&gt;[&lt;span class=&#34;string&#34;&gt;&amp;quot;cityCascader&amp;quot;&lt;/span&gt;].&lt;span class=&#34;title function_&#34;&gt;getCheckedNodes&lt;/span&gt;()[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;].&lt;span class=&#34;property&#34;&gt;pathLabels&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  that.&lt;span class=&#34;property&#34;&gt;model&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;cityName&lt;/span&gt; = labels[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;] + &lt;span class=&#34;string&#34;&gt;&amp;quot;/&amp;quot;&lt;/span&gt; + labels[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  that.&lt;span class=&#34;property&#34;&gt;comeAddress&lt;/span&gt; = value;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2022/01/04/HmacSHA256%E4%BD%BF%E7%94%A8%E5%AE%8C%E6%88%90%E7%AD%BE%E5%90%8D%E8%AE%A4%E8%AF%81/</guid>
            <title>HmacSHA256使用完成签名认证</title>
            <link>http://example.com/2022/01/04/HmacSHA256%E4%BD%BF%E7%94%A8%E5%AE%8C%E6%88%90%E7%AD%BE%E5%90%8D%E8%AE%A4%E8%AF%81/</link>
            <category>JAVA</category>
            <category>HmacSHA</category>
            <pubDate>Tue, 04 Jan 2022 18:54:28 +0800</pubDate>
            <description><![CDATA[ &lt;ol&gt;
&lt;li&gt;背景&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;在业务中我想将某些业务功能放开到白名单中，这样使用的时候就需要用户额外登录，但是直接放开到白名单中可能会存在安全隐患，尤其是其中国有部分业务涉及到数据库的操作，因此我的想法是在前端的请求头中添加一个签名，在后端添加一个 Filter 来校验签名是否正确，在这里选择的是 HmacSHA256 的签名加密方法。&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;前端代码&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;由于业务逻辑较为简单，因此我的签名校验只包含一个时间以及随机数来确保前端请求是来自合法的网站就行。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;安装依赖&lt;/strong&gt;&lt;/p&gt;
  &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;npm install crypto-js&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;引入依赖&lt;/strong&gt;&lt;/p&gt;
  &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;import CryptoJS from &amp;quot;crypto-js&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;在封装 axios 的 js 文件中为 headers 添加三个属性&lt;/strong&gt;&lt;/p&gt;
  &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;import axios from &amp;quot;axios&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;const instance = axios.create(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    baseURL: &amp;#x27;/&amp;#x27;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    timeout: 6000&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;instance.defaults.headers.common[&amp;#x27;valid_time&amp;#x27;] = &amp;quot;&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;instance.defaults.headers.common[&amp;#x27;valid_random&amp;#x27;] = &amp;quot;&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;instance.defaults.headers.common[&amp;#x27;valid_sign&amp;#x27;] = &amp;quot;&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;在前端实际业务请求前设置参数&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;其中 secretKey 为密钥，需前后端一致，在前段的请求头中添加参数&lt;/p&gt;
&lt;/blockquote&gt;
  &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;let that = this;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let headers = &amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;headers.valid_time = new Date().getTime();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;headers.valid_random = that.getRandomInt(10000);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let hash = CryptoJS.HmacSHA256(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    headers.valid_time + &amp;quot;&amp;quot; + headers.valid_random,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    that.secretKey&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;).toString();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;headers.valid_sign = hash;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;that.postRequest(url,param,&amp;#123; headers: headers &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;后端代码&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;后端代码添加 Filter 类来验证需要签名的路径&lt;/strong&gt;&lt;/p&gt;
  &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;@Slf4j&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;@WebFilter(filterName = &amp;quot;signFilter&amp;quot;,urlPatterns = &amp;#123;&amp;quot;demo/first&amp;quot;,&amp;quot;demo/sec&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;public class SignFilter implements Filter &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    /**签名生成器，将前端带来的时间与随机数用秘钥加密*/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    private String hmacSHA256(String secretKey, String plain)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        String hash = &amp;quot;&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        try &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            Mac sha256_HMAC = Mac.getInstance(&amp;quot;HmacSHA256&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            SecretKeySpec secret_key = new SecretKeySpec(secretKey.getBytes(), &amp;quot;HmacSHA256&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            sha256_HMAC.init(secret_key);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            byte[] bytes = sha256_HMAC.doFinal(plain.getBytes());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            hash = byteArrayToHexString(bytes);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125; catch (Exception e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            System.out.println(&amp;quot;Error HmacSHA256 ===========&amp;quot; + e.getMessage());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return hash;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    private  String byteArrayToHexString(byte[] b) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        StringBuilder hs = new StringBuilder();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        String stmp;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        for (int n = 0; b != null &amp;amp;&amp;amp; n &amp;lt; b.length; n++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            stmp = Integer.toHexString(b[n] &amp;amp; 0XFF);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            if (stmp.length() == 1) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                hs.append(&amp;#x27;0&amp;#x27;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            hs.append(stmp);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return hs.toString().toUpperCase();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain chain) throws IOException, ServletException &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        HttpServletRequest request = (HttpServletRequest) servletRequest;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        HttpServletResponse response= (HttpServletResponse) servletResponse;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        String requestUrl = request.getRequestURI();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        /*获取请求头中的参数*/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        String time = request.getHeader(this.VALID_TIME);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        String random = request.getHeader(this.VALID_RANDOM);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        String sign = request.getHeader(this.VALID_SIGN);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        /*编写实际校验代码*/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;注意事项&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;在使用 @WebFilter (filterName = “signFilter”,urlPatterns = {“demo/first”,&amp;quot;demo/sec}) 的时候，有时候会出现 urlPatterns 属性失效的情况，可能由于 filterName 属性首字母大写引起的，改为小写。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2021/12/30/%E8%BF%9C%E7%A8%8B%E7%99%BB%E5%BD%95Linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8ELinux%E7%9B%AE%E5%BD%95%E7%9A%84%E5%88%9D%E6%AD%A5%E4%BA%86%E8%A7%A3/</guid>
            <title>远程登录Linux服务器与Linux目录的初步了解</title>
            <link>http://example.com/2021/12/30/%E8%BF%9C%E7%A8%8B%E7%99%BB%E5%BD%95Linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8ELinux%E7%9B%AE%E5%BD%95%E7%9A%84%E5%88%9D%E6%AD%A5%E4%BA%86%E8%A7%A3/</link>
            <category>Linux</category>
            <pubDate>Thu, 30 Dec 2021 18:04:05 +0800</pubDate>
            <description><![CDATA[ &lt;blockquote&gt;
&lt;p&gt;在之前的文章中，完成了 VMWare 与 Centos7.6 的安装，我可以通过实际操作直接操作 Linux 系统，但是在实际的工作中却并不是这样的，我们的 Linux 服务器可能远在万里之外，所以我们一般是通过远程登录来操作 Linux 服务器。常用的工具有 XShell 与 MobaXterm 等，因为 Xshell 提供免费的非商用资格，因此我在学习中使用的是 Xshell 与 Xftp 工具。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;工具准备&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#工具准备&#34;&gt;#&lt;/a&gt; 工具准备&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;下载安装 Xshell 和 Xftp6 的安装包:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cubmV0c2FyYW5nLmNvbS9lbi9mcmVlLWZvci1ob21lLXNjaG9vbC8=&#34;&gt; 下载地址&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;center&gt;
    &lt;img style=&#34;border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);&#34; 
    data-src=&#34;https://wbl-1302681813.cos.ap-nanjing.myqcloud.com/Linux%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84%E4%B8%8E%E8%BF%9C%E7%A8%8B%E7%99%BB%E5%BD%95%2Fxshell%E4%B8%8B%E8%BD%BD.png&#34;&gt;
    &lt;br&gt;
    &lt;div style=&#34;color:orange; border-bottom: 1px solid #d9d9d9;
    display: inline-block;
    color: #999;
    padding: 2px;&#34;&gt;XSHELL与XFTP提供免费的非商用资格，选择Both，并选择DOWNLOAD&lt;/div&gt;
&lt;/center&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;获取 Linux 服务器的 IP 地址，并确定主机与其能 ping 通。&lt;/li&gt;
&lt;/ol&gt;
&lt;center&gt;
    &lt;img style=&#34;border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);&#34; 
    data-src=&#34;https://wbl-1302681813.cos.ap-nanjing.myqcloud.com/Linux%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84%E4%B8%8E%E8%BF%9C%E7%A8%8B%E7%99%BB%E5%BD%95%2FLinux%E7%9A%84ip%E5%9C%B0%E5%9D%80.png&#34;&gt;
    &lt;br&gt;
    &lt;div style=&#34;color:orange; border-bottom: 1px solid #d9d9d9;
    display: inline-block;
    color: #999;
    padding: 2px;&#34;&gt;Linux下查看IP地址的命令：ifconfig&lt;/div&gt;
&lt;/center&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;使用 XSHELL 连接 Linux 服务器进行远程登录&lt;/li&gt;
&lt;/ol&gt;
&lt;center&gt;
    &lt;img style=&#34;border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);&#34; 
    data-src=&#34;https://wbl-1302681813.cos.ap-nanjing.myqcloud.com/Linux%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84%E4%B8%8E%E8%BF%9C%E7%A8%8B%E7%99%BB%E5%BD%95%2Fxshell%E6%96%B0%E5%BB%BA%E4%BC%9A%E8%AF%9D.png&#34;&gt;
    &lt;br&gt;
    &lt;div style=&#34;color:orange; border-bottom: 1px solid #d9d9d9;
    display: inline-block;
    color: #999;
    padding: 2px;&#34;&gt;输入主机IP进行连接&lt;/div&gt;
&lt;/center&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;使用 Xftp 进行远程文件的上传与下载，Xftp 与 Xshell 的连接操作是一样的，不过需要注意的是 XFTP 可能存在中文乱码的问题，将编码格式选择为 UTF-8 之后可以解决&lt;/li&gt;
&lt;/ol&gt;
&lt;center&gt;
    &lt;img style=&#34;border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);&#34; 
    data-src=&#34;https://wbl-1302681813.cos.ap-nanjing.myqcloud.com/Linux%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84%E4%B8%8E%E8%BF%9C%E7%A8%8B%E7%99%BB%E5%BD%95%2FXftp%E7%9A%84%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81%E9%97%AE%E9%A2%98.png&#34;&gt;
    &lt;br&gt;
    &lt;div style=&#34;color:orange; border-bottom: 1px solid #d9d9d9;
    display: inline-block;
    color: #999;
    padding: 2px;&#34;&gt;点击小地球，选择UTF-8&lt;/div&gt;
&lt;/center&gt;
&lt;h4 id=&#34;linux目录结构&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#linux目录结构&#34;&gt;#&lt;/a&gt; Linux 目录结构&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;Linux 的文件系统是采用级层式的树状目录结构，在此结构中的最上层是根目录 &amp;quot;/&amp;quot;，然后再此目录下创建其他目录。&lt;br&gt;
下面是根目录下的一些常用目录，可以大体了解一下每个目录的作用，在 Linux 的世界里，一切皆文件。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;/bin:Binary 的缩写，存放常用命令&lt;/li&gt;
&lt;li&gt;/sbin:s-Super User 系统管理员使用的系统管理程序&lt;/li&gt;
&lt;li&gt;/home: 存放普通用户的目录，每个 Linux 用户都有一个自己的目录，一般是用户名命名&lt;/li&gt;
&lt;li&gt;/root: 系统管理员目录&lt;/li&gt;
&lt;li&gt;/lib: 系统开机所需要的动态链接共享库，类似于 DLL 文件&lt;/li&gt;
&lt;li&gt;/lost+found：一般情况是空的，当系统非法关机后，这里就会出现文件&lt;/li&gt;
&lt;li&gt;/etc：系统管理所需要的配置文件与子目录，my.conf&lt;/li&gt;
&lt;li&gt;/user：用户的应用程序目录，类似 windows 下的 Program files&lt;/li&gt;
&lt;li&gt;/boot：系统启动的一些核心文件，包括一些连接文件与镜像文件&lt;/li&gt;
&lt;li&gt;/proc：虚拟目录，系统内存的映射，访问此系统来获取系统的信息&lt;/li&gt;
&lt;li&gt;/tmp: 存放临时文件&lt;/li&gt;
&lt;li&gt;/dev：类似设备管理器，所有硬件用文件的形式存储&lt;/li&gt;
&lt;li&gt;/mnt：用来做挂载的文件，比如共享文件夹&lt;/li&gt;
&lt;li&gt;/opt：给主机额外安装软件所存放的目录&lt;/li&gt;
&lt;li&gt;/var：存放很多变化的东西，最经典的就是日志&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;vi与vim的基础使用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#vi与vim的基础使用&#34;&gt;#&lt;/a&gt; vi 与 vim 的基础使用&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;Linux 系统会内置 vi 文本编译器&lt;br&gt;
 Vim 具有程序编辑的能力，可以看做 vi 的增强版本&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;vi 与 vim 的三种模式&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;一般 / 正常模式：一般打开的默认模式&lt;/li&gt;
&lt;li&gt;插入模式：输入 i ,o ,a 可以进入插入模式&lt;/li&gt;
&lt;li&gt;命令行 / 底行模式：提供相关指令，完成读取、存盘、替换、离开 vim、显示行号等动作&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;vim 一些常用快捷键
&lt;ul&gt;
&lt;li&gt;&lt;kbd&gt;yy&lt;/kbd&gt;+&lt;kbd&gt;p&lt;/kbd&gt;:yy 拷贝当前行，p 粘贴，一般模式下&lt;/li&gt;
&lt;li&gt;&lt;kbd&gt;5yy&lt;/kbd&gt;+&lt;kbd&gt;p&lt;/kbd&gt;: 拷贝当前行向下的五行，p 粘贴，一般模式下&lt;/li&gt;
&lt;li&gt;&lt;kbd&gt;dd&lt;/kbd&gt;: 删除当前行，一般模式下&lt;/li&gt;
&lt;li&gt;&lt;kbd&gt;5dd&lt;/kbd&gt;: 删除当前行向下的五行，一般模式下&lt;/li&gt;
&lt;li&gt;&lt;kbd&gt;/ 关键字&lt;/kbd&gt;+&lt;kbd&gt;回车&lt;/kbd&gt; 查找，命令行下&lt;/li&gt;
&lt;li&gt;&lt;kbd&gt;set nu&lt;/kbd&gt;+&lt;kbd&gt;set nonu&lt;/kbd&gt; 设置行数与取消行数，命令行下&lt;/li&gt;
&lt;li&gt;&lt;kbd&gt;G&lt;/kbd&gt; 一般模式下，到文档的最末尾&lt;/li&gt;
&lt;li&gt;&lt;kbd&gt;gg&lt;/kbd&gt; 一般模式下，但文档的首页&lt;/li&gt;
&lt;li&gt;&lt;kbd&gt;u&lt;/kbd&gt; 一般模式下，撤销刚才的动作&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2021/12/27/VMware%E4%B8%8ECentos%E5%AE%89%E8%A3%85%E6%AD%A5%E9%AA%A4/</guid>
            <title>VMware与Centos安装步骤与虚拟机配置</title>
            <link>http://example.com/2021/12/27/VMware%E4%B8%8ECentos%E5%AE%89%E8%A3%85%E6%AD%A5%E9%AA%A4/</link>
            <category>VMware</category>
            <category>Linux</category>
            <pubDate>Mon, 27 Dec 2021 18:45:44 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;准备阶段&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#准备阶段&#34;&gt;#&lt;/a&gt; 准备阶段&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;提前下载 VMware 安装包与 Centos 的镜像文件&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Centos 下载的是 Centos7.6 版本，&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92YXVsdC5jZW50b3Mub3JnLzcuNi4xODEwL2lzb3MveDg2XzY0Lw==&#34;&gt;Centos 下载地址&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;VMware 下载的是 16.1 版本，&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudm13YXJlLmNvbS9wcm9kdWN0cy93b3Jrc3RhdGlvbi1wcm8vd29ya3N0YXRpb24tcHJvLWV2YWx1YXRpb24uaHRtbA==&#34;&gt;VMware 下载地址&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Vmware 一般是有一个月的免费试用期的，&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy41MjB4aWF6YWkuY29tL3NvZnQvVk13YXJlLVdvcmtzdGF0aW9uLTE2Lmh0bWw=&#34;&gt;VMware 秘钥&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;vmware安装与虚拟机新建&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#vmware安装与虚拟机新建&#34;&gt;#&lt;/a&gt; VMware 安装与虚拟机新建&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Vmware 的安装&lt;/strong&gt;&lt;br&gt;
 VMware 安装包傻瓜式安装，一直下一步到程序安装完成。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;新建虚拟机与配置&lt;/strong&gt;&lt;br&gt;
安装成后打开 VMware，文件 -&amp;gt; 新建虚拟机，选择典型配置，然后跟随向导进行配置，需要注意的是需要在虚拟机设置的时候选择合适的配置，下面是我的安装向导配置。&lt;/li&gt;
&lt;/ol&gt;
&lt;center&gt;
    &lt;img style=&#34;border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);&#34; 
    data-src=&#34;https://wbl-1302681813.cos.ap-nanjing.myqcloud.com/VMware%E4%B8%8ECentos%E5%AE%89%E8%A3%85%E6%AD%A5%E9%AA%A4%E4%B8%8E%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%85%8D%E7%BD%AE/%E9%85%8D%E7%BD%AE.png&#34;&gt;
    &lt;br&gt;
    &lt;div style=&#34;color:orange; border-bottom: 1px solid #d9d9d9;
    display: inline-block;
    color: #999;
    padding: 2px;&#34;&gt;选择典型&lt;/div&gt;
&lt;/center&gt;
&lt;center&gt;
    &lt;img style=&#34;border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);&#34; 
    data-src=&#34;https://wbl-1302681813.cos.ap-nanjing.myqcloud.com/VMware%E4%B8%8ECentos%E5%AE%89%E8%A3%85%E6%AD%A5%E9%AA%A4%E4%B8%8E%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%85%8D%E7%BD%AE/%E5%90%91%E5%AF%BC.png&#34;&gt;
&lt;/center&gt;
&lt;center&gt;
    &lt;img style=&#34;border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);&#34; 
    data-src=&#34;https://wbl-1302681813.cos.ap-nanjing.myqcloud.com/VMware%E4%B8%8ECentos%E5%AE%89%E8%A3%85%E6%AD%A5%E9%AA%A4%E4%B8%8E%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%85%8D%E7%BD%AE/%E5%90%91%E5%AF%BC1.png&#34;&gt;
&lt;/center&gt;
&lt;center&gt;
    &lt;img style=&#34;border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);&#34; 
    data-src=&#34;https://wbl-1302681813.cos.ap-nanjing.myqcloud.com/VMware%E4%B8%8ECentos%E5%AE%89%E8%A3%85%E6%AD%A5%E9%AA%A4%E4%B8%8E%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%85%8D%E7%BD%AE%2F%E5%90%91%E5%AF%BC3.png&#34;&gt;
&lt;/center&gt;
&lt;center&gt;
    &lt;img style=&#34;border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);&#34; 
    data-src=&#34;https://wbl-1302681813.cos.ap-nanjing.myqcloud.com/VMware%E4%B8%8ECentos%E5%AE%89%E8%A3%85%E6%AD%A5%E9%AA%A4%E4%B8%8E%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%85%8D%E7%BD%AE%2F%E5%90%91%E5%AF%BC4.png&#34;&gt;
    &lt;br&gt;
    &lt;div style=&#34;color:orange; border-bottom: 1px solid #d9d9d9;
    display: inline-block;
    color: #999;
    padding: 2px;&#34;&gt;根据向导进行基础配置&lt;/div&gt;
&lt;/center&gt;
&lt;center&gt;
    &lt;img style=&#34;border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);&#34; 
    data-src=&#34;https://wbl-1302681813.cos.ap-nanjing.myqcloud.com/VMware%E4%B8%8ECentos%E5%AE%89%E8%A3%85%E6%AD%A5%E9%AA%A4%E4%B8%8E%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%85%8D%E7%BD%AE%2F%E5%90%91%E5%AF%BC6.png&#34;&gt;
    &lt;br&gt;
    &lt;div style=&#34;color:orange; border-bottom: 1px solid #d9d9d9;
    display: inline-block;
    color: #999;
    padding: 2px;&#34;&gt;进行虚拟机的配置&lt;/div&gt;
&lt;/center&gt;
&lt;p&gt;&lt;mark&gt;首先根据自己的主机 cpu 核数来为虚拟机分配处理器；&lt;br&gt;
在网络选项的时候会存在三种网络连接方式，这个选择 NAT, 至于三者区别会在文章后序介绍；&lt;br&gt;
 在使用 ISO 映像文件的时候选择提前下载好的 Centos7 的映像文件。&lt;/mark&gt;&lt;/p&gt;
&lt;center&gt;
    &lt;img style=&#34;border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);&#34; 
    data-src=&#34;https://wbl-1302681813.cos.ap-nanjing.myqcloud.com/VMware%E4%B8%8ECentos%E5%AE%89%E8%A3%85%E6%AD%A5%E9%AA%A4%E4%B8%8E%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%85%8D%E7%BD%AE%2F%E5%90%91%E5%AF%BC7.png&#34;&gt;
    &lt;br&gt;
    &lt;div style=&#34;color:orange; border-bottom: 1px solid #d9d9d9;
    display: inline-block;
    color: #999;
    padding: 2px;&#34;&gt;配置完成后运行虚拟机，开始虚拟机其他配置，首先install Centos7&lt;/div&gt;
&lt;/center&gt;
&lt;center&gt;
    &lt;img style=&#34;border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);&#34; 
    data-src=&#34;https://wbl-1302681813.cos.ap-nanjing.myqcloud.com/VMware%E4%B8%8ECentos%E5%AE%89%E8%A3%85%E6%AD%A5%E9%AA%A4%E4%B8%8E%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%85%8D%E7%BD%AE%2F%E5%90%91%E5%AF%BC8.png&#34;&gt;
    &lt;br&gt;
    &lt;div style=&#34;color:orange; border-bottom: 1px solid #d9d9d9;
    display: inline-block;
    color: #999;
    padding: 2px;&#34;&gt;选择操作系统的语言&lt;/div&gt;
&lt;/center&gt;
&lt;center&gt;
    &lt;img style=&#34;border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);&#34; 
    data-src=&#34;https://wbl-1302681813.cos.ap-nanjing.myqcloud.com/VMware%E4%B8%8ECentos%E5%AE%89%E8%A3%85%E6%AD%A5%E9%AA%A4%E4%B8%8E%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%85%8D%E7%BD%AE%2F%E5%90%91%E5%AF%BC9.png&#34;&gt;
    &lt;br&gt;
    &lt;div style=&#34;color:orange; border-bottom: 1px solid #d9d9d9;
    display: inline-block;
    color: #999;
    padding: 2px;&#34;&gt;选择完语言之后进行系统软件的安装配置，在软件选择这里我们不用最小的默认安装，因为最小安装是默认没有图形界面和gcc等开发环境的，因此我们按照图中的选择进行选择，默认安装gcc等开发环境&lt;/div&gt;
&lt;/center&gt;
&lt;center&gt;
    &lt;img style=&#34;border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);&#34; 
    data-src=&#34;https://wbl-1302681813.cos.ap-nanjing.myqcloud.com/VMware%E4%B8%8ECentos%E5%AE%89%E8%A3%85%E6%AD%A5%E9%AA%A4%E4%B8%8E%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%85%8D%E7%BD%AE%2F%E5%90%91%E5%AF%BC10.png&#34;&gt;
    &lt;br&gt;
    &lt;div style=&#34;color:orange; border-bottom: 1px solid #d9d9d9;
    display: inline-block;
    color: #999;
    padding: 2px;&#34;&gt;使用Linux操作系统最后自己进行一下系统的分区，选择我要配置分区&lt;/div&gt;
&lt;/center&gt;
&lt;center&gt;
    &lt;img style=&#34;border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);&#34; 
    data-src=&#34;https://wbl-1302681813.cos.ap-nanjing.myqcloud.com/VMware%E4%B8%8ECentos%E5%AE%89%E8%A3%85%E6%AD%A5%E9%AA%A4%E4%B8%8E%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%85%8D%E7%BD%AE%2F%E5%90%91%E5%AF%BC11.png&#34;&gt;
    &lt;br&gt;
    &lt;div style=&#34;color:orange; border-bottom: 1px solid #d9d9d9;
    display: inline-block;
    color: #999;
    padding: 2px;&#34;&gt;这是一般的分区配置，这个在文章后序会有讲到&lt;/div&gt;
&lt;/center&gt;
&lt;center&gt;
    &lt;img style=&#34;border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);&#34; 
    data-src=&#34;https://wbl-1302681813.cos.ap-nanjing.myqcloud.com/VMware%E4%B8%8ECentos%E5%AE%89%E8%A3%85%E6%AD%A5%E9%AA%A4%E4%B8%8E%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%85%8D%E7%BD%AE%2F%E5%90%91%E5%AF%BC12.png&#34;&gt;
    &lt;br&gt;
    &lt;div style=&#34;color:orange; border-bottom: 1px solid #d9d9d9;
    display: inline-block;
    color: #999;
    padding: 2px;&#34;&gt;最后设置root角色的密码，同时最好在创建一个普通用户&lt;/div&gt;
&lt;/center&gt;
&lt;h2 id=&#34;虚拟机新建注意问题&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#虚拟机新建注意问题&#34;&gt;#&lt;/a&gt; 虚拟机新建注意问题&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Linux 网络连接的三种方式&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;桥接模式&lt;/strong&gt;： 虚拟系统与主机网段相同，虚拟机可以直接连通其他主机，但是容易引起 ip 冲突。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;NAT 模式&lt;/strong&gt;： 网络地址转换，虚拟系统与外部通讯并且不引起 ip 冲突，参考公司的服务器的内外服务器结构。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;主机模式&lt;/strong&gt;：独立系统，不与外部通讯&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;一般 Linux 分区&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;boot 分区&lt;/strong&gt;：引导分区，一般是 1G&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;swap 分区&lt;/strong&gt;：交换分区，一般与分配内存大小一致，&lt;mark&gt;swap 分区可以临时充当内存&lt;/mark&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;root 分区&lt;/strong&gt;：根分区，剩余内存&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;KDUMP&lt;/strong&gt;&lt;br&gt;
KDUMP 是内核崩溃转储机制，内核崩溃的时候将系统数据捕获下来，生产环境需要开启，学习就不开了。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;虚拟机的基础操作&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#虚拟机的基础操作&#34;&gt;#&lt;/a&gt; 虚拟机的基础操作&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;虚拟机克隆&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;直接拷贝一份安装好的虚拟机文件：在创建虚拟机的时候会指定本地目录，直接拷贝本地文件&lt;/li&gt;
&lt;li&gt;使用 VM 进行克隆操作（先关闭需要克隆的 Linux 系统）
&lt;ul&gt;
&lt;li&gt;创建链接克隆：对原虚拟机的引用，需要原虚拟机可以访问，内存需求较少&lt;/li&gt;
&lt;li&gt;创建完整克隆：完整克隆原虚拟机，但是桥接方式连接网络的话 ip 也会被克隆过去&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;虚拟机快照&lt;/strong&gt;&lt;br&gt;
&lt;mark&gt;使用虚拟机系统的时候，想要回到原先的某一个状态，可以通过 vmware 的快照管理，用游戏的存档读档来理解&lt;/mark&gt;&lt;br&gt;
右键虚拟机选择快照选项，有快照与快照管理功能，如下图。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;center&gt;
    &lt;img style=&#34;border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);&#34; 
    data-src=&#34;https://wbl-1302681813.cos.ap-nanjing.myqcloud.com/VMware%E4%B8%8ECentos%E5%AE%89%E8%A3%85%E6%AD%A5%E9%AA%A4%E4%B8%8E%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%85%8D%E7%BD%AE%2F%E5%BF%AB%E7%85%A7.png&#34;&gt;
    &lt;br&gt;
    &lt;div style=&#34;color:orange; border-bottom: 1px solid #d9d9d9;
    display: inline-block;
    color: #999;
    padding: 2px;&#34;&gt;快照不是越多越好，快照会磁盘空间&lt;/div&gt;
&lt;/center&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;&lt;strong&gt;虚拟机的迁移与删除&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;VM 中的虚拟机本质就是文件，文件或文件夹整体拷贝与删除，也可以用 vm 提供的移除功能&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;&lt;strong&gt;VMTools 的使用&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;安装 vmtools&lt;/strong&gt;：安装可以根据可视化操作来进行安装或者利用压缩包来安装
&lt;ul&gt;
&lt;li&gt;将 VMwareTools-10.3.23-16594550.tar.gz 压缩包复制到 /opt 目录下进行解压，进入解压后的目录，&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3huLS12bXdhcmUtaW5zdGFsbC00eDkzYnM4OWQucGw=&#34;&gt;运行 vmware-install.pl&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;设置共享文件夹&lt;/strong&gt;：在主机单独设置一个文件夹作为主机与虚拟机的交换区，并在虚拟机的设置中将共享文件夹设置为该文件夹&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;center&gt;
    &lt;img style=&#34;border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);&#34; 
    data-src=&#34;https://wbl-1302681813.cos.ap-nanjing.myqcloud.com/VMware%E4%B8%8ECentos%E5%AE%89%E8%A3%85%E6%AD%A5%E9%AA%A4%E4%B8%8E%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%85%8D%E7%BD%AE%2F%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6%E5%A4%B9.png&#34;&gt;
    &lt;br&gt;
    &lt;div style=&#34;color:orange; border-bottom: 1px solid #d9d9d9;
    display: inline-block;
    color: #999;
    padding: 2px;&#34;&gt;我在主机的D盘设置了一个叫做VMShare的文件夹作为共享文件夹&lt;/div&gt;
&lt;/center&gt;
&lt;center&gt;
    &lt;img style=&#34;border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);&#34; 
    data-src=&#34;https://wbl-1302681813.cos.ap-nanjing.myqcloud.com/VMware%E4%B8%8ECentos%E5%AE%89%E8%A3%85%E6%AD%A5%E9%AA%A4%E4%B8%8E%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%85%8D%E7%BD%AE%2F%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6%E5%A4%B9Linux.png&#34;&gt;
    &lt;br&gt;
    &lt;div style=&#34;color:orange; border-bottom: 1px solid #d9d9d9;
    display: inline-block;
    color: #999;
    padding: 2px;&#34;&gt;在主机中新建一个txt文件，可以在虚拟机的这个路径来查看共享的文件&lt;/div&gt;
&lt;/center&gt;
&lt;p&gt;&lt;mark&gt;注意：这个使用 vmtools 来进行共享文件要用 root 账户来进行操作，复制普通用户是看不到共享文件夹的，如果 root 账户也看不到的话，可以在设置里将共享文件夹禁用在开启&lt;/mark&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2021/12/20/el-table%E5%8A%A8%E6%80%81%E5%88%97%E5%AF%BC%E8%87%B4%E6%95%B0%E6%8D%AE%E9%94%99%E4%BD%8D%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/</guid>
            <title>el-table动态列导致数据错位问题解决</title>
            <link>http://example.com/2021/12/20/el-table%E5%8A%A8%E6%80%81%E5%88%97%E5%AF%BC%E8%87%B4%E6%95%B0%E6%8D%AE%E9%94%99%E4%BD%8D%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/</link>
            <category>Element</category>
            <category>Bug</category>
            <pubDate>Mon, 20 Dec 2021 19:12:12 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;问题描述&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#问题描述&#34;&gt;#&lt;/a&gt; 问题描述&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;使用elementUI的el-table做列表动态列控制的时候，出现了表格列数据错位的样式bug，如下图所示。
&lt;/code&gt;&lt;/pre&gt;
&lt;div style=&#34;float:left;border:solid1px000;margin:20px,20px;&#34;&gt;
&lt;img data-src=https://wbl-1302681813.cos.ap-nanjing.myqcloud.com/table%E5%8A%A8%E6%80%81%E5%88%97%E5%AF%BC%E8%87%B4%E6%95%B0%E6%8D%AE%E9%94%99%E4%BD%8D%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/%E5%8A%A8%E6%80%81.PNG /&gt;
&lt;/div&gt;
&lt;div style=&#34;float:left;border:solid1px000;margin:20px,20px;&#34;&gt;
&lt;img data-src=https://wbl-1302681813.cos.ap-nanjing.myqcloud.com/table%E5%8A%A8%E6%80%81%E5%88%97%E5%AF%BC%E8%87%B4%E6%95%B0%E6%8D%AE%E9%94%99%E4%BD%8D%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/%E5%88%97%E9%94%99%E4%BD%8D%E6%A0%B7%E5%BC%8F1.PNG /&gt;
&lt;/div&gt;
&lt;div style=&#34;float:left;border:solid1px000;margin:20px,20px;&#34;&gt;
&lt;img data-src=https://wbl-1302681813.cos.ap-nanjing.myqcloud.com/table%E5%8A%A8%E6%80%81%E5%88%97%E5%AF%BC%E8%87%B4%E6%95%B0%E6%8D%AE%E9%94%99%E4%BD%8D%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/%E5%88%97%E9%94%99%E4%BD%8D%E6%A0%B7%E5%BC%8F2.PNG /&gt;
&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;第一张图片中的来源数据错位到后一列，第二张图中服务分类列宽度足够而数据却不显示
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;原因分析&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#原因分析&#34;&gt;#&lt;/a&gt; 原因分析&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;在这里先上一下这个 table 的配置代码&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;el-table-column&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;:show-overflow-tooltip=&amp;quot;tdWrap&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;:align=&amp;quot;x.align&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;:header-align=&amp;quot;x.headerAlign&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;:key=&amp;quot;idx&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;:label=&amp;quot;x.name&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;:prop=&amp;quot;x.sortModel&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;:width=&amp;quot;x.width&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;:min-width=&amp;quot;x.minWidth&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;:fixed=&amp;quot;x.fixed ? x.fixed : false&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v-for=&amp;quot;(x,idx) in tableHeader&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v-if=&amp;quot;x.hidden&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;:sortable=&amp;quot;x.sort === true ? &amp;#x27;custom&amp;#x27; : false&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;通过 F12 可以看出来，错位的列使用的 css 宽度样式实际上是被隐藏的前置列&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div style=&#34;float:left;border:solid1px000;margin:20px,20px;&#34;&gt;
&lt;img data-src=https://wbl-1302681813.cos.ap-nanjing.myqcloud.com/table%E5%8A%A8%E6%80%81%E5%88%97%E5%AF%BC%E8%87%B4%E6%95%B0%E6%8D%AE%E9%94%99%E4%BD%8D%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/%E5%85%83%E7%B4%A01.PNG /&gt;
&lt;/div&gt;
&lt;div style=&#34;float:left;border:solid1px000;margin:20px,20px;&#34;&gt;
&lt;img data-src=https://wbl-1302681813.cos.ap-nanjing.myqcloud.com/table%E5%8A%A8%E6%80%81%E5%88%97%E5%AF%BC%E8%87%B4%E6%95%B0%E6%8D%AE%E9%94%99%E4%BD%8D%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/%E5%85%83%E7%B4%A02.PNG /&gt;
&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;这个问题其实是由v-if引起的，我们一般控制页面元素显示都是采用v-if或者v-show。
其中两者的不同在于v-if是在dom树中将元素删除，而v-show是将元素的display属性置为none。
在el-table中我简单的使用index来做了v-for循环中的key值，这个导致了不同的列可能会使用到相同的key值，这个导致了列渲染到其他列的宽度。
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;解决方案&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#解决方案&#34;&gt;#&lt;/a&gt; 解决方案&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;通过随机数来为 v-for 的 key 值赋值，这样保证动态列每次删除或者重新生成不会出现相同的 key 值。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;el-table-column&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;:show-overflow-tooltip=&amp;quot;tdWrap&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;:align=&amp;quot;x.align&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;:header-align=&amp;quot;x.headerAlign&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;:key=&amp;quot;x.field+&amp;#x27;&amp;#x27;+Math.random()&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;:label=&amp;quot;x.name&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;:prop=&amp;quot;x.sortModel&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;:width=&amp;quot;x.width&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;:min-width=&amp;quot;x.minWidth&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;:fixed=&amp;quot;x.fixed ? x.fixed : false&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v-for=&amp;quot;x in activeTableHeader&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;:sortable=&amp;quot;x.sort === true ? &amp;#x27;custom&amp;#x27; : false&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;computed: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    activeTableHeader: function() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return this.tableHeader.filter(function(header) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            return !header.hidden;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; 在这个代码里同时优化了v-for与v-if同时使用的问题，这个是参照官方文档通过计算属性将原有的v-for与v-if进行了优化
&lt;/code&gt;&lt;/pre&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2021/12/16/element%E8%A1%A8%E6%A0%BC%E7%BB%84%E4%BB%B6%E6%BB%9A%E5%8A%A8%E6%9D%A1%E9%81%AE%E6%8C%A1%E6%95%B0%E6%8D%AE%E9%97%AE%E9%A2%98/</guid>
            <title>element表格组件滚动条遮挡数据问题</title>
            <link>http://example.com/2021/12/16/element%E8%A1%A8%E6%A0%BC%E7%BB%84%E4%BB%B6%E6%BB%9A%E5%8A%A8%E6%9D%A1%E9%81%AE%E6%8C%A1%E6%95%B0%E6%8D%AE%E9%97%AE%E9%A2%98/</link>
            <category>Element</category>
            <category>Bug</category>
            <pubDate>Thu, 16 Dec 2021 19:24:07 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;问题描述&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#问题描述&#34;&gt;#&lt;/a&gt; 问题描述&lt;/h2&gt;
&lt;p&gt;最近在工作中经常使用 ElementUI 的表格组件，发现如果 EL-TABLE 组件的 EL-TABLE-COLUMN 加了 FIXED 属性列固定后样式后会出现高度错乱问题，这样会导致表格数据有被遮挡，bug 样式及代码如下&lt;/p&gt;
&lt;center&gt;
    &lt;img style=&#34;border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);&#34; 
    data-src=&#34;https://wbl-1302681813.cos.ap-nanjing.myqcloud.com/el-table%E5%86%BB%E7%BB%93%E5%88%97%E5%AF%BC%E8%87%B4%E9%94%99%E4%BD%8D%E9%97%AE%E9%A2%98/bug.PNG&#34;&gt;
    &lt;br&gt;
    &lt;div style=&#34;color:orange; border-bottom: 1px solid #d9d9d9;
    display: inline-block;
    color: #999;
    padding: 2px;&#34;&gt;BUG截图&lt;/div&gt;
&lt;/center&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;el-table&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v-loading=&amp;quot;loading&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  :data=&amp;quot;configurationData&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  :row-class-name=&amp;quot;configurationRowClassName&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  @selection-change=&amp;quot;configurationDetailSelectionChange&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  stripe&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  style=&amp;quot;width: 100%&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  ref=&amp;quot;configurationTb&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;el-table-column fixed=&amp;quot;left&amp;quot; type=&amp;quot;selection&amp;quot; width=&amp;quot;30&amp;quot; align=&amp;quot;center&amp;quot; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;el-table-column label=&amp;quot;id&amp;quot; prop=&amp;quot;id&amp;quot; v-if=&amp;quot;false&amp;quot;&amp;gt;&amp;lt;/el-table-column&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;el-table-column&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    fixed=&amp;quot;left&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    label=&amp;quot;序号&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    align=&amp;quot;center&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    prop=&amp;quot;xh&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    width=&amp;quot;50&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;gt;&amp;lt;/el-table-column&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;gt;&amp;lt;/el-table&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;问题分析&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#问题分析&#34;&gt;#&lt;/a&gt; 问题分析&lt;/h2&gt;
&lt;p&gt;经过排查基本可以确定这个样式 bug 是因为 el-table 同时存在冻结列与滚动条导致的。&lt;br&gt;
在列加入冻结列，即 &lt;strong&gt;fixed=“right”&lt;/strong&gt; 或者&lt;strong&gt; fixed=“left”&lt;/strong&gt; 之后，页面会增加缓存，再次切换回来就会导致高度没有计算 padding 值所有会出现高度错乱的问题，这样数据便会被遮挡。&lt;/p&gt;
&lt;h2 id=&#34;解决方法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#解决方法&#34;&gt;#&lt;/a&gt; 解决方法&lt;/h2&gt;
&lt;p&gt;增加一个样式重新计算这部分高度来覆盖原有的样式&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;创建一个新的 css 文件 tableFixed.css&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;/* 解决存在冻结列导致最后一行数据被遮挡问题 */ &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.el-table__fixed,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.el-table__fixed-right &amp;#123; height: 100% !important; &amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.el-table__fixed,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.el-table__fixed-left &amp;#123; height: 100% !important; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;在 main.js 中全局引入&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;//引入样式文件 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import &amp;#x27;../static/css/tableFixed.css&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;修改后列表操作列最后一行成功显示完全&lt;/p&gt;
&lt;h2 id=&#34;引申问题&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#引申问题&#34;&gt;#&lt;/a&gt; 引申问题&lt;/h2&gt;
&lt;p&gt;冻结列与侧边滚动条会引起冻结列的错位，如下图的操作列与数据都出现了错位现象&lt;/p&gt;
&lt;center class = &#34;half&#34;&gt;
&lt;img src = https://wbl-1302681813.cos.ap-nanjing.myqcloud.com/el-table%E5%86%BB%E7%BB%93%E5%88%97%E5%AF%BC%E8%87%B4%E9%94%99%E4%BD%8D%E9%97%AE%E9%A2%98/%E8%A1%A8%E6%A0%BC%E9%94%99%E4%BD%8D1.PNG  width = &#34;50%&#34; height=&#34;330px&#34; align = left&gt;
&lt;img src = https://wbl-1302681813.cos.ap-nanjing.myqcloud.com/el-table%E5%86%BB%E7%BB%93%E5%88%97%E5%AF%BC%E8%87%B4%E9%94%99%E4%BD%8D%E9%97%AE%E9%A2%98/%E8%A1%A8%E6%A0%BC%E9%94%99%E4%BD%8D2.PNG  width = &#34;50%&#34; height=&#34;330px&#34; align = right&gt;
&lt;/center&gt;
&lt;p&gt;其实这是因为 elementui 的 table 组件的滚动条在 window 环境下会默认显示，这个为滚动条预留的宽度导致数据发生了错位，我们可以去查看 element 下的源码关于 table 的滚动条宽度是怎么计算的&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;elementui 中 table 组件关于滚动条定义的部分源码&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;v-if&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;rightFixedColumns.length &amp;gt; 0&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;v-mousewheel&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;handleFixedMousewheel&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;class&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;el-table__fixed-right&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;ref&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;rightFixedWrapper&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;:style&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;[&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&lt;span class=&#34;tag&#34;&gt;    width: layout.rightFixedWidth ? layout.rightFixedWidth + &amp;#x27;px&amp;#x27; : &amp;#x27;&amp;#x27;,&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&lt;span class=&#34;tag&#34;&gt;    right: layout.scrollY ? (border ? layout.gutterWidth : (layout.gutterWidth || 0)) + &amp;#x27;px&amp;#x27; : &amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&lt;span class=&#34;tag&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&lt;span class=&#34;tag&#34;&gt;  fixedHeight]&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;其中主要的宽度由 gutterWidth 控制，通过查找 table-layout.js 可以找到 gutterWidth 的定义方式&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;this.gutterWidth = scrollbarWidth();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;最后找到 scrollbar-width.js 来找到滚动条的实际实现方法&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;import Vue from &amp;#x27;vue&amp;#x27;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let scrollBarWidth;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;export default function() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  if (Vue.prototype.$isServer) return 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  if (scrollBarWidth !== undefined) return scrollBarWidth;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  const outer = document.createElement(&amp;#x27;div&amp;#x27;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  outer.className = &amp;#x27;el-scrollbar__wrap&amp;#x27;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  outer.style.visibility = &amp;#x27;hidden&amp;#x27;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  outer.style.width = &amp;#x27;100px&amp;#x27;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  outer.style.position = &amp;#x27;absolute&amp;#x27;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  outer.style.top = &amp;#x27;-9999px&amp;#x27;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  document.body.appendChild(outer);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  const widthNoScroll = outer.offsetWidth;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  outer.style.overflow = &amp;#x27;scroll&amp;#x27;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  const inner = document.createElement(&amp;#x27;div&amp;#x27;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  inner.style.width = &amp;#x27;100%&amp;#x27;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  outer.appendChild(inner);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  const widthWithScroll = inner.offsetWidth;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  outer.parentNode.removeChild(outer);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  scrollBarWidth = widthNoScroll - widthWithScroll;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  return scrollBarWidth;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;其实最终实现的方法很简单粗暴，首先创建了一个外部 outer 的 div，并强制让其出现滚动条，然后创建一个内部 inner 的 div，通过 &lt;strong&gt;scrollBarWidth = widthNoScroll - widthWithScroll;&lt;/strong&gt; 来计算出滚动条的宽度。&lt;br&gt;
因此我们只需要控制返回的 &lt;strong&gt;scrollBarWidth&lt;/strong&gt; 为 0 就可以解决这个问题，我们从代码中也可以看出来我们需要修改的样式为 &lt;strong&gt;el-scrollbar__wrap&lt;/strong&gt; ，同样的在刚刚的 tableFixed.css 文件中加入如下的样式代码。&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;/* 解决操作栏按钮错位问题 */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.el-table__body-wrapper::-webkit-scrollbar &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  width: 15px;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  height: 15px;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.el-table__body-wrapper::-webkit-scrollbar-thumb &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  background-color: #ddd;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  border-radius: 3px;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.el-scrollbar__wrap::-webkit-scrollbar &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  width: 15px;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  height: 15px;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样刚刚计算公式计算出的结果就是 0px，也就不会出现为滚动条预留位置而导致的错位问题了。&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
