<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://example.com</id>
    <title>スポンジ・ボブです • Posts by &#34;网络&#34; tag</title>
    <link href="http://example.com" />
    <updated>2022-02-08T10:33:09.000Z</updated>
    <category term="JAVA" />
    <category term="HmacSHA" />
    <category term="VUE" />
    <category term="VMware" />
    <category term="Linux" />
    <category term="Element" />
    <category term="Bug" />
    <category term="网络" />
    <entry>
        <id>http://example.com/2022/02/08/%E5%BC%82%E6%AD%A5%E8%AF%B7%E6%B1%82CloseableHttpAsyncClient%E7%9A%84%E4%BD%BF%E7%94%A8/</id>
        <title>异步请求CloseableHttpAsyncClient的使用</title>
        <link rel="alternate" href="http://example.com/2022/02/08/%E5%BC%82%E6%AD%A5%E8%AF%B7%E6%B1%82CloseableHttpAsyncClient%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
        <content type="html">&lt;h3 id=&#34;前言&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#前言&#34;&gt;#&lt;/a&gt; 前言&lt;/h3&gt;
&lt;p&gt;最近项目有个小需求，需要发送短信验证码，而我们用的短信发送平台是由其他机构提供的，我们只能通过请求前置机并由前置机进行 nginx 转发来调用实际短信平台的 WebService 服务。&lt;br&gt;
由于验证码不会影响业务逻辑，因此我这里开始采用的时异步 http 请求，也就是使用的 httpclient 在 4.0 后提供新的 api CloseableHttpAsyncClient。&lt;/p&gt;
&lt;h3 id=&#34;关于网络调用类型&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#关于网络调用类型&#34;&gt;#&lt;/a&gt; 关于网络调用类型&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;传统 BIO&lt;br&gt;
 同步阻塞式 IO，一个连接一个线程，客户端有连接请求时服务器端就需要启动一个线程进行处理&lt;/li&gt;
&lt;li&gt;NIO(NOT-Blocking IO)&lt;br&gt;
 同步非阻塞式 IO，一个请求一个线程&lt;/li&gt;
&lt;li&gt;AIO&lt;br&gt;
 异步非阻塞式 IO，服务器实现模式为一个有效请求一个线程&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;closeablehttpasyncclient的使用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#closeablehttpasyncclient的使用&#34;&gt;#&lt;/a&gt; CloseableHttpAsyncClient 的使用&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;CloseableHttpAsyncClient 是 apache 在 4.0 后提供 AIO 操作的 api&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;pom 引入 &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &amp;lt;groupId&amp;gt;org.apache.httpcomponents&amp;lt;/groupId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &amp;lt;artifactId&amp;gt;httpclient&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &amp;lt;version&amp;gt;4.5.2&amp;lt;/version&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &amp;lt;groupId&amp;gt;org.apache.httpcomponents&amp;lt;/groupId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &amp;lt;artifactId&amp;gt;httpcore&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &amp;lt;version&amp;gt;4.4.5&amp;lt;/version&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &amp;lt;groupId&amp;gt;org.apache.httpcomponents&amp;lt;/groupId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &amp;lt;artifactId&amp;gt;httpcore-nio&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &amp;lt;version&amp;gt;4.4.5&amp;lt;/version&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &amp;lt;groupId&amp;gt;org.apache.httpcomponents&amp;lt;/groupId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &amp;lt;artifactId&amp;gt;httpasyncclient&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &amp;lt;version&amp;gt;4.1.2&amp;lt;/version&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;定义 AsynHttpClient 类&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;package com.dhc.leapower.business.rygl.utils;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import org.apache.http.client.config.RequestConfig;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import org.apache.http.client.methods.HttpPost;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import org.apache.http.entity.ContentType;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import org.apache.http.entity.StringEntity;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import org.apache.http.impl.nio.client.CloseableHttpAsyncClient;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import org.apache.http.impl.nio.client.HttpAsyncClients;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import org.apache.http.impl.nio.reactor.IOReactorConfig;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import org.apache.http.nio.reactor.ConnectingIOReactor;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import org.apache.http.nio.reactor.IOReactorException;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; * @author baolei.wei&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; * @title: AsynHttpClient&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; * @projectName leapower-business-rygl&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; * @description:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; * @date 2022/1/24 12:55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;public class AsynHttpClient &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    private static CloseableHttpAsyncClient client = null;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    public static CloseableHttpAsyncClient getHttpClient() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if (client == null) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            synchronized (AsynHttpClient.class) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                if (client == null) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    RequestConfig requestConfig = RequestConfig.custom()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            //连接超时,连接建立时间,三次握手完成时间&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            .setConnectTimeout(2000)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            //请求超时,数据传输过程中数据包之间间隔的最大时间&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            .setSocketTimeout(2000)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            //使用连接池来管理连接,从连接池获取连接的超时时间&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            .setConnectionRequestTimeout(20000)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            .build();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    //配置io线程&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    IOReactorConfig ioReactorConfig = IOReactorConfig.custom().&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            setIoThreadCount(Runtime.getRuntime().availableProcessors())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            .setSoKeepAlive(true)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            .build();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    //设置连接池大小&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    ConnectingIOReactor ioReactor = null;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    try &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        ioReactor = new DefaultConnectingIOReactor(ioReactorConfig);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &amp;#125; catch (IOReactorException e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        e.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    PoolingNHttpClientConnectionManager connManager = new PoolingNHttpClientConnectionManager(ioReactor);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    //最大连接数设置1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    connManager.setMaxTotal(5);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    //per route最大连接数设置&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    connManager.setDefaultMaxPerRoute(5);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    client = HttpAsyncClients.custom()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            .setConnectionManager(connManager)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            .setDefaultRequestConfig(requestConfig)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            .build();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    client.start();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return client;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    public static HttpPost getPostBody(String urls, String bodys, ContentType contentType) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        HttpPost post = null;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        StringEntity entity = null;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        post = new HttpPost(urls);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        entity = new StringEntity(bodys, contentType);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        post.setEntity(entity);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return post;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;实际应用&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; * 生成验证码&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;@ApiOperation(value = &amp;quot;新建&amp;quot;, notes = &amp;quot;&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;@RequestMapping(value = &amp;quot;/create&amp;quot;, method = RequestMethod.POST, produces = MediaType.APPLICATION_JSON_VALUE)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;public RestDTO&amp;lt;Void&amp;gt; create(@RequestBody JSONObject tel) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    String code = this.identifyingCode(6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    //像手机发送验证码&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    CloseableHttpAsyncClient httpClient = AsynHttpClient.getHttpClient();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    //短信平台前置机的ip与WebService 服务方法&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    String url = &amp;quot;http://127.0.0.1:60001/login&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    JSONObject parameter = new JSONObject();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    parameter.put(&amp;quot;accountName&amp;quot;,&amp;quot;admin&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    parameter.put(&amp;quot;password&amp;quot;,&amp;quot;123456&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    String stringBody = JSONObject.toJSONString(parameter);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    HttpPost httpPost = new HttpPost(url);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    StringEntity entity = new StringEntity(stringBody, ContentType.APPLICATION_JSON);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    httpPost.setEntity(entity);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    FutureCallback&amp;lt;HttpResponse&amp;gt; callback = new FutureCallback&amp;lt;HttpResponse&amp;gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        public void completed(HttpResponse result) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            HttpEntity entity = result.getEntity();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            InputStream stream = null;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            try &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                stream = entity.getContent();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125; catch (IOException e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                e.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            String string = changeInputStream(stream, &amp;quot;utf-8&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            System.out.println(&amp;quot;-----------&amp;quot; + string + &amp;quot;-----------&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        public void failed(Exception e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            e.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            System.err.println(&amp;quot;失败：&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        public void cancelled() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            System.err.println(&amp;quot;cancelled&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    httpClient.execute(httpPost,callback);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    verificationCodeCacheService.add(tel.get(&amp;quot;tel&amp;quot;).toString(),code);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return RestDTO.success();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
        <category term="网络" />
        <updated>2022-02-08T10:33:09.000Z</updated>
    </entry>
</feed>
