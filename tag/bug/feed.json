{
    "version": "https://jsonfeed.org/version/1",
    "title": "スポンジ・ボブです • All posts by \"bug\" tag",
    "description": "",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2021/12/20/el-table%E5%8A%A8%E6%80%81%E5%88%97%E5%AF%BC%E8%87%B4%E6%95%B0%E6%8D%AE%E9%94%99%E4%BD%8D%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/",
            "url": "http://example.com/2021/12/20/el-table%E5%8A%A8%E6%80%81%E5%88%97%E5%AF%BC%E8%87%B4%E6%95%B0%E6%8D%AE%E9%94%99%E4%BD%8D%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/",
            "title": "el-table动态列导致数据错位问题解决",
            "date_published": "2021-12-20T11:12:12.000Z",
            "content_html": "<h2 id=\"问题描述\"><a class=\"markdownIt-Anchor\" href=\"#问题描述\">#</a> 问题描述</h2>\n<pre><code>使用elementUI的el-table做列表动态列控制的时候，出现了表格列数据错位的样式bug，如下图所示。\n</code></pre>\n<div style=\"float:left;border:solid1px000;margin:20px,20px;\">\n<img data-src=https://wbl-1302681813.cos.ap-nanjing.myqcloud.com/table%E5%8A%A8%E6%80%81%E5%88%97%E5%AF%BC%E8%87%B4%E6%95%B0%E6%8D%AE%E9%94%99%E4%BD%8D%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/%E5%8A%A8%E6%80%81.PNG />\n</div>\n<div style=\"float:left;border:solid1px000;margin:20px,20px;\">\n<img data-src=https://wbl-1302681813.cos.ap-nanjing.myqcloud.com/table%E5%8A%A8%E6%80%81%E5%88%97%E5%AF%BC%E8%87%B4%E6%95%B0%E6%8D%AE%E9%94%99%E4%BD%8D%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/%E5%88%97%E9%94%99%E4%BD%8D%E6%A0%B7%E5%BC%8F1.PNG />\n</div>\n<div style=\"float:left;border:solid1px000;margin:20px,20px;\">\n<img data-src=https://wbl-1302681813.cos.ap-nanjing.myqcloud.com/table%E5%8A%A8%E6%80%81%E5%88%97%E5%AF%BC%E8%87%B4%E6%95%B0%E6%8D%AE%E9%94%99%E4%BD%8D%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/%E5%88%97%E9%94%99%E4%BD%8D%E6%A0%B7%E5%BC%8F2.PNG />\n</div>\n<pre><code>第一张图片中的来源数据错位到后一列，第二张图中服务分类列宽度足够而数据却不显示\n</code></pre>\n<h2 id=\"原因分析\"><a class=\"markdownIt-Anchor\" href=\"#原因分析\">#</a> 原因分析</h2>\n<blockquote>\n<p>在这里先上一下这个 table 的配置代码</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;el-table-column</span><br><span class=\"line\">:show-overflow-tooltip=&quot;tdWrap&quot;</span><br><span class=\"line\">:align=&quot;x.align&quot;</span><br><span class=\"line\">:header-align=&quot;x.headerAlign&quot;</span><br><span class=\"line\">:key=&quot;idx&quot;</span><br><span class=\"line\">:label=&quot;x.name&quot;</span><br><span class=\"line\">:prop=&quot;x.sortModel&quot;</span><br><span class=\"line\">:width=&quot;x.width&quot;</span><br><span class=\"line\">:min-width=&quot;x.minWidth&quot;</span><br><span class=\"line\">:fixed=&quot;x.fixed ? x.fixed : false&quot;</span><br><span class=\"line\">v-for=&quot;(x,idx) in tableHeader&quot;</span><br><span class=\"line\">v-if=&quot;x.hidden&quot;</span><br><span class=\"line\">:sortable=&quot;x.sort === true ? &#x27;custom&#x27; : false&quot;</span><br><span class=\"line\">&gt;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>通过 F12 可以看出来，错位的列使用的 css 宽度样式实际上是被隐藏的前置列</p>\n</blockquote>\n<div style=\"float:left;border:solid1px000;margin:20px,20px;\">\n<img data-src=https://wbl-1302681813.cos.ap-nanjing.myqcloud.com/table%E5%8A%A8%E6%80%81%E5%88%97%E5%AF%BC%E8%87%B4%E6%95%B0%E6%8D%AE%E9%94%99%E4%BD%8D%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/%E5%85%83%E7%B4%A01.PNG />\n</div>\n<div style=\"float:left;border:solid1px000;margin:20px,20px;\">\n<img data-src=https://wbl-1302681813.cos.ap-nanjing.myqcloud.com/table%E5%8A%A8%E6%80%81%E5%88%97%E5%AF%BC%E8%87%B4%E6%95%B0%E6%8D%AE%E9%94%99%E4%BD%8D%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/%E5%85%83%E7%B4%A02.PNG />\n</div>\n<pre><code>这个问题其实是由v-if引起的，我们一般控制页面元素显示都是采用v-if或者v-show。\n其中两者的不同在于v-if是在dom树中将元素删除，而v-show是将元素的display属性置为none。\n在el-table中我简单的使用index来做了v-for循环中的key值，这个导致了不同的列可能会使用到相同的key值，这个导致了列渲染到其他列的宽度。\n</code></pre>\n<h2 id=\"解决方案\"><a class=\"markdownIt-Anchor\" href=\"#解决方案\">#</a> 解决方案</h2>\n<ul>\n<li>通过随机数来为 v-for 的 key 值赋值，这样保证动态列每次删除或者重新生成不会出现相同的 key 值。</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;el-table-column</span><br><span class=\"line\">:show-overflow-tooltip=&quot;tdWrap&quot;</span><br><span class=\"line\">:align=&quot;x.align&quot;</span><br><span class=\"line\">:header-align=&quot;x.headerAlign&quot;</span><br><span class=\"line\">:key=&quot;x.field+&#x27;&#x27;+Math.random()&quot;</span><br><span class=\"line\">:label=&quot;x.name&quot;</span><br><span class=\"line\">:prop=&quot;x.sortModel&quot;</span><br><span class=\"line\">:width=&quot;x.width&quot;</span><br><span class=\"line\">:min-width=&quot;x.minWidth&quot;</span><br><span class=\"line\">:fixed=&quot;x.fixed ? x.fixed : false&quot;</span><br><span class=\"line\">v-for=&quot;x in activeTableHeader&quot;</span><br><span class=\"line\">:sortable=&quot;x.sort === true ? &#x27;custom&#x27; : false&quot;</span><br><span class=\"line\">&gt;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">computed: &#123;</span><br><span class=\"line\">    activeTableHeader: function() &#123;</span><br><span class=\"line\">        return this.tableHeader.filter(function(header) &#123;</span><br><span class=\"line\">            return !header.hidden;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<pre><code>&gt; 在这个代码里同时优化了v-for与v-if同时使用的问题，这个是参照官方文档通过计算属性将原有的v-for与v-if进行了优化\n</code></pre>\n",
            "tags": [
                "Element",
                "Bug"
            ]
        },
        {
            "id": "http://example.com/2021/12/16/element%E8%A1%A8%E6%A0%BC%E7%BB%84%E4%BB%B6%E6%BB%9A%E5%8A%A8%E6%9D%A1%E9%81%AE%E6%8C%A1%E6%95%B0%E6%8D%AE%E9%97%AE%E9%A2%98/",
            "url": "http://example.com/2021/12/16/element%E8%A1%A8%E6%A0%BC%E7%BB%84%E4%BB%B6%E6%BB%9A%E5%8A%A8%E6%9D%A1%E9%81%AE%E6%8C%A1%E6%95%B0%E6%8D%AE%E9%97%AE%E9%A2%98/",
            "title": "element表格组件滚动条遮挡数据问题",
            "date_published": "2021-12-16T11:24:07.000Z",
            "content_html": "<h2 id=\"问题描述\"><a class=\"markdownIt-Anchor\" href=\"#问题描述\">#</a> 问题描述</h2>\n<p>最近在工作中经常使用 ElementUI 的表格组件，发现如果 EL-TABLE 组件的 EL-TABLE-COLUMN 加了 FIXED 属性列固定后样式后会出现高度错乱问题，这样会导致表格数据有被遮挡，bug 样式及代码如下</p>\n<center>\n    <img style=\"border-radius: 0.3125em;\n    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);\" \n    data-src=\"https://wbl-1302681813.cos.ap-nanjing.myqcloud.com/el-table%E5%86%BB%E7%BB%93%E5%88%97%E5%AF%BC%E8%87%B4%E9%94%99%E4%BD%8D%E9%97%AE%E9%A2%98/bug.PNG\">\n    <br>\n    <div style=\"color:orange; border-bottom: 1px solid #d9d9d9;\n    display: inline-block;\n    color: #999;\n    padding: 2px;\">BUG截图</div>\n</center>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;el-table</span><br><span class=\"line\">  v-loading=&quot;loading&quot;</span><br><span class=\"line\">  :data=&quot;configurationData&quot;</span><br><span class=\"line\">  :row-class-name=&quot;configurationRowClassName&quot;</span><br><span class=\"line\">  @selection-change=&quot;configurationDetailSelectionChange&quot;</span><br><span class=\"line\">  stripe</span><br><span class=\"line\">  style=&quot;width: 100%&quot;</span><br><span class=\"line\">  ref=&quot;configurationTb&quot;</span><br><span class=\"line\">&gt;</span><br><span class=\"line\">  &lt;el-table-column fixed=&quot;left&quot; type=&quot;selection&quot; width=&quot;30&quot; align=&quot;center&quot; /&gt;</span><br><span class=\"line\">  &lt;el-table-column label=&quot;id&quot; prop=&quot;id&quot; v-if=&quot;false&quot;&gt;&lt;/el-table-column&gt;</span><br><span class=\"line\">  &lt;el-table-column</span><br><span class=\"line\">    fixed=&quot;left&quot;</span><br><span class=\"line\">    label=&quot;序号&quot;</span><br><span class=\"line\">    align=&quot;center&quot;</span><br><span class=\"line\">    prop=&quot;xh&quot;</span><br><span class=\"line\">    width=&quot;50&quot;</span><br><span class=\"line\">  &gt;&lt;/el-table-column</span><br><span class=\"line\">&gt;&lt;/el-table&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"问题分析\"><a class=\"markdownIt-Anchor\" href=\"#问题分析\">#</a> 问题分析</h2>\n<p>经过排查基本可以确定这个样式 bug 是因为 el-table 同时存在冻结列与滚动条导致的。<br>\n在列加入冻结列，即 <strong>fixed=“right”</strong> 或者<strong> fixed=“left”</strong> 之后，页面会增加缓存，再次切换回来就会导致高度没有计算 padding 值所有会出现高度错乱的问题，这样数据便会被遮挡。</p>\n<h2 id=\"解决方法\"><a class=\"markdownIt-Anchor\" href=\"#解决方法\">#</a> 解决方法</h2>\n<p>增加一个样式重新计算这部分高度来覆盖原有的样式</p>\n<ul>\n<li>创建一个新的 css 文件 tableFixed.css</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/* 解决存在冻结列导致最后一行数据被遮挡问题 */ </span><br><span class=\"line\">.el-table__fixed,</span><br><span class=\"line\">.el-table__fixed-right &#123; height: 100% !important; &#125; </span><br><span class=\"line\">.el-table__fixed,</span><br><span class=\"line\">.el-table__fixed-left &#123; height: 100% !important; &#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>在 main.js 中全局引入</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//引入样式文件 </span><br><span class=\"line\">import &#x27;../static/css/tableFixed.css&#x27;</span><br></pre></td></tr></table></figure>\n<p>修改后列表操作列最后一行成功显示完全</p>\n<h2 id=\"引申问题\"><a class=\"markdownIt-Anchor\" href=\"#引申问题\">#</a> 引申问题</h2>\n<p>冻结列与侧边滚动条会引起冻结列的错位，如下图的操作列与数据都出现了错位现象</p>\n<center class = \"half\">\n<img src = https://wbl-1302681813.cos.ap-nanjing.myqcloud.com/el-table%E5%86%BB%E7%BB%93%E5%88%97%E5%AF%BC%E8%87%B4%E9%94%99%E4%BD%8D%E9%97%AE%E9%A2%98/%E8%A1%A8%E6%A0%BC%E9%94%99%E4%BD%8D1.PNG  width = \"50%\" height=\"330px\" align = left>\n<img src = https://wbl-1302681813.cos.ap-nanjing.myqcloud.com/el-table%E5%86%BB%E7%BB%93%E5%88%97%E5%AF%BC%E8%87%B4%E9%94%99%E4%BD%8D%E9%97%AE%E9%A2%98/%E8%A1%A8%E6%A0%BC%E9%94%99%E4%BD%8D2.PNG  width = \"50%\" height=\"330px\" align = right>\n</center>\n<p>其实这是因为 elementui 的 table 组件的滚动条在 window 环境下会默认显示，这个为滚动条预留的宽度导致数据发生了错位，我们可以去查看 element 下的源码关于 table 的滚动条宽度是怎么计算的</p>\n<ul>\n<li>elementui 中 table 组件关于滚动条定义的部分源码</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;rightFixedColumns.length &gt; 0&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">v-mousewheel</span>=<span class=\"string\">&quot;handleFixedMousewheel&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">class</span>=<span class=\"string\">&quot;el-table__fixed-right&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">ref</span>=<span class=\"string\">&quot;rightFixedWrapper&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">:style</span>=<span class=\"string\">&quot;[&#123;</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">    width: layout.rightFixedWidth ? layout.rightFixedWidth + &#x27;px&#x27; : &#x27;&#x27;,</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">    right: layout.scrollY ? (border ? layout.gutterWidth : (layout.gutterWidth || 0)) + &#x27;px&#x27; : &#x27;&#x27;</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">  &#125;,</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">  fixedHeight]&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">&gt;</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>其中主要的宽度由 gutterWidth 控制，通过查找 table-layout.js 可以找到 gutterWidth 的定义方式</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">this.gutterWidth = scrollbarWidth();</span><br></pre></td></tr></table></figure>\n<ul>\n<li>最后找到 scrollbar-width.js 来找到滚动条的实际实现方法</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import Vue from &#x27;vue&#x27;;</span><br><span class=\"line\">let scrollBarWidth;</span><br><span class=\"line\">export default function() &#123;</span><br><span class=\"line\">  if (Vue.prototype.$isServer) return 0;</span><br><span class=\"line\">  if (scrollBarWidth !== undefined) return scrollBarWidth;</span><br><span class=\"line\"></span><br><span class=\"line\">  const outer = document.createElement(&#x27;div&#x27;);</span><br><span class=\"line\">  outer.className = &#x27;el-scrollbar__wrap&#x27;;</span><br><span class=\"line\">  outer.style.visibility = &#x27;hidden&#x27;;</span><br><span class=\"line\">  outer.style.width = &#x27;100px&#x27;;</span><br><span class=\"line\">  outer.style.position = &#x27;absolute&#x27;;</span><br><span class=\"line\">  outer.style.top = &#x27;-9999px&#x27;;</span><br><span class=\"line\">  document.body.appendChild(outer);</span><br><span class=\"line\"></span><br><span class=\"line\">  const widthNoScroll = outer.offsetWidth;</span><br><span class=\"line\">  outer.style.overflow = &#x27;scroll&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">  const inner = document.createElement(&#x27;div&#x27;);</span><br><span class=\"line\">  inner.style.width = &#x27;100%&#x27;;</span><br><span class=\"line\">  outer.appendChild(inner);</span><br><span class=\"line\"></span><br><span class=\"line\">  const widthWithScroll = inner.offsetWidth;</span><br><span class=\"line\">  outer.parentNode.removeChild(outer);</span><br><span class=\"line\">  scrollBarWidth = widthNoScroll - widthWithScroll;</span><br><span class=\"line\"></span><br><span class=\"line\">  return scrollBarWidth;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>其实最终实现的方法很简单粗暴，首先创建了一个外部 outer 的 div，并强制让其出现滚动条，然后创建一个内部 inner 的 div，通过 <strong>scrollBarWidth = widthNoScroll - widthWithScroll;</strong> 来计算出滚动条的宽度。<br>\n因此我们只需要控制返回的 <strong>scrollBarWidth</strong> 为 0 就可以解决这个问题，我们从代码中也可以看出来我们需要修改的样式为 <strong>el-scrollbar__wrap</strong> ，同样的在刚刚的 tableFixed.css 文件中加入如下的样式代码。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/* 解决操作栏按钮错位问题 */</span><br><span class=\"line\">.el-table__body-wrapper::-webkit-scrollbar &#123;</span><br><span class=\"line\">  width: 15px;</span><br><span class=\"line\">  height: 15px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.el-table__body-wrapper::-webkit-scrollbar-thumb &#123;</span><br><span class=\"line\">  background-color: #ddd;</span><br><span class=\"line\">  border-radius: 3px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.el-scrollbar__wrap::-webkit-scrollbar &#123;</span><br><span class=\"line\">  width: 15px;</span><br><span class=\"line\">  height: 15px;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这样刚刚计算公式计算出的结果就是 0px，也就不会出现为滚动条预留位置而导致的错位问题了。</p>\n",
            "tags": [
                "Element",
                "Bug"
            ]
        }
    ]
}